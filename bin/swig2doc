#! /usr/bin/ruby
#
#  SWIG2DOC
#
#  Convert SWIG+Doxygen output to documentation
#
#  Copyright (C) 2010 Pjotr Prins <pjotr.prins@thebird.nl> 
#

PROG_VERSION='swig2doc 0.02 (February 2010)'

srcpath=File.dirname(File.dirname(__FILE__))
libpath=File.dirname(srcpath)+'/lib'
$: << libpath

require 'optparse'
require 'ostruct'
require 'rubygems'

print "#{PROG_VERSION}\n"

usage = <<USAGE

		Convert SWIG+Doxygen XML to some form of documentation. By default this is
		POD for Perl, rdoc for Ruby. Other switches allow textual, HTML and LaTeX
		output. Multiple outputs can be specified. For more information see
		http://biolib.open-bio.org/

		Copyright (C) 2010 Pjotr Prins <pjotr.prins@thebird.nl> 
        
    Use --help for more information

USAGE

print(usage) if ARGV.size == 0

$options = OpenStruct.new()
$options.outdir = './tmp'
Dir.mkdir($options.outdir) if !File.directory?($options.outdir)

opts = OptionParser.new do |opts|
  opts.on("--auto", "generate native language output (POD for Perl)") do | b |
    $options.output_auto = true
  end
  opts.on("--text", "generate plain text output") do | b |
    $options.output_text = true
  end
  opts.on("--html", "generate HTML output") do | b |
    $options.output_html = true
  end

  opts.on_tail("-h", "--help", "Print this help") {
    print(usage)
    print(opts)
    print <<EXAMPLE
    
Examples:

    ./bin/swig2doc test/data/doxygen/xml/affyio/biolib__affyio_8c.xml test/data/swig/perl_affyio_wrap.xml 
    
EXAMPLE
    exit()
  }
end
opts.parse!(ARGV)

exit(1) if ARGV.size == 0

require 'sourcetree'
require 'input/parserfactory'
require 'output/htmlwriter'

tree = SourceTree.new

ARGV.each do | fn |
  parser = ParserFactory.new(fn)
  tree.add(parser.type, parser.cobjs)
end

tree.analyse

if $options.output_text
end

if $options.output_html
  HtmlWriter.new(tree).write($options.outdir+'/html')
end

if $options.output_auto
end


